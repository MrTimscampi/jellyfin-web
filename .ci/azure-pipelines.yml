trigger:
  batch: true
  branches:
    include:
    - master
    - release-*
  tags:
    include:
    - '*'


variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

jobs:
  - job: main_build
    displayName: 'Main Build'

    dependsOn: lint
    condition: succeeded()

    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      displayName: 'Install Node'
      inputs:
        versionSpec: '10.x'

    - script: 'yarn install'
      displayName: 'Install Dependencies'

    - script: 'test -d dist'
      displayName: 'Check Build'

    - script: 'yarn pack --filename jellyfin-web.tgz'
      displayName: 'Bundle Release'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Release'
      condition: succeeded()
      inputs:
        targetPath: '$(Build.SourcesDirectory)/jellyfin-web.tgz'
        artifactName: 'jellyfin-web'

  - job: lint
    displayName: 'Lint'

    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      displayName: 'Install Node'
      inputs:
        versionSpec: '10.x'

    - task: Cache@2
      inputs:
        key: yarn | $(Agent.OS) | yarn.lock
        path: $(YARN_CACHE_FOLDER)
        restoreKeys: |
          yarn | $(Agent.OS)
          yarn
      displayName: Cache Yarn packages

    - script: 'yarn install'
      displayName: 'Install Dependencies'

    - script: 'yarn run lint --format junit -o junit-eslint.xml'
      displayName: 'Run ESLint'

    - task: PublishTestResults@2
      displayName: 'Publish ESLint results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'junit-eslint.xml'
        failTaskOnFailedTests: true
        testRunTitle: 'Javascript linting'
      continueOnError: true

    - script: 'yarn run stylelint'
      displayName: 'Run stylelint'
